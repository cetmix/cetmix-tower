<?xml version="1.0" encoding="utf-8" ?>
<odoo>

    <record id="command_build_odoo_image" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Build Odoo image</field>
        <field name="code">
docker build {{ dockerfile_location }} --tag "{{ odoo_image_name }}" \
--no-cache \
--build-arg ODOO_VERSION={{ odoo_version }} \
--build-arg GITHUB_TOKEN=#!cxtower.secret.GITHUB_TOKEN!#

        </field>
    </record>

    <record id="command_run_odoo_container" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Run Odoo container</field>
        <field name="code">
docker run -d \
-p {{ odoo_port }}:8069 \
-v {{ odoo_data }}:/var/lib/odoo \
-v {{ odoo_config_location }}:/etc/odoo \
--restart {{ odoo_restart_policy }} \
--name {{ odoo_container_name}} \
--link {{ shared_postgres_name }}:db \
-t {{ odoo_image_name }}

        </field>
    </record>

    <record id="command_create_odoo_directories" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Create Odoo instance directories</field>
        <field name="code">
mkdir -p {{ odoo_data }} &amp;&amp; \
mkdir -p {{ dockerfile_location }} &amp;&amp; \
mkdir -p {{ odoo_config_location }}

        </field>
    </record>

    <record id="command_change_odoo_directories_ownership" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Change Odoo directories ownership</field>
        <field name="code">
chown -R {{ docker_odoo_uid }}:{{ docker_odoo_gid }} {{ odoo_data }} \
&amp;&amp; \
chown -R {{ docker_odoo_uid }}:{{ docker_odoo_gid }} {{ odoo_config_location }}

        </field>
    </record>

    <record id="command_stop_odoo_container" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Stop Odoo container</field>
        <field name="code">
docker stop {{ odoo_container_name}}
        </field>
    </record>

    <record id="command_remove_odoo_container" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Remove Odoo container</field>
        <field name="code">
docker rm {{ odoo_container_name}}
        </field>
    </record>

    <record id="command_run_odoo_container_with_shared_pg" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Run Odoo container with shared PG</field>
        <field name="code">
docker run -d \
-p {{ odoo_port }}:8069 \
{% if \
    odoo_longpolling_port and odoo_longpolling_port != '0' \
    and odoo_workers and odoo_workers != '0' \
%} \
    -p {{ odoo_longpolling_port }}:8072 \
{% endif %} \
-v {{ odoo_data }}:/var/lib/odoo \
{% if odoo_config_location %} \
    -v {{ odoo_config_location }}:/etc/odoo \
{% endif %} \
{% if odoo_extra_addons %} \
    -v {{ odoo_extra_addons }}:{{ odoo_docker_extra_addons }} \
{% endif %} \
{% if odoo_src %} \
    -v {{ odoo_src }}:/mnt/odoo \
{% endif %} \
--restart {{ odoo_restart_policy }} \
--name {{ odoo_container_name}} \
--link {{ shared_postgres_name }}:db \
-t {{ odoo_image_name }} \
-- \
{% if odoo_without_demo and odoo_without_demo !='0' %} \
    --without-demo={{ odoo_without_demo }} \
{% endif %} \
{% if odoo_addons_path %} \
    --addons-path={{ odoo_addons_path }} \
{% endif %} \
{% if odoo_db_name %} \
    --database={{ odoo_db_name }} \
{% endif %} \
{% if odoo_limit_time_cpu %} \
    --limit-time-cpu={{ odoo_limit_time_cpu }} \
{% endif %} \
{% if odoo_limit_time_real %} \
    --limit-time-real={{ odoo_limit_time_real }} \
{% endif %} \
{% if odoo_log_level %} \
    --log-level={{ odoo_log_level }} \
{% endif %} \
{% if odoo_log_handler %} \
    --log-handler={{ odoo_log_handler }} \
{% endif %} \
{% if odoo_log_level %} \
    --log-level={{ odoo_log_level }} \
{% endif %} \
{% if odoo_log_web %} \
    --log-web \
{% endif %} \
{% if odoo_workers %} \
    --workers={{ odoo_workers }} \
{% endif %} \
{% if odoo_load %} \
    --load={{ odoo_load }} \
{% endif %} \
{% if odoo_config_file %} \
    --config={{ odoo_config_file }} \
{% endif %} \
{% if odoo_proxy_mode %} \
    --proxy-mode \
{% endif %} \
{% if \
    odoo_gevent_port and odoo_gevent_port != '0' \
    and odoo_workers and odoo_workers != '0' \
%} \
    --gevent-port={{ odoo_gevent_port }} \
{% elif \
    odoo_longpolling_port and odoo_longpolling_port != '0' \
    and odoo_workers and odoo_workers != '0' \
%} \
    --longpolling-port={{ odoo_longpolling_port }} \
{% endif %} \
{% if \
    odoo_longpolling_port and odoo_longpolling_port != '0' \
    and odoo_workers and odoo_workers != '0' \
    and odoo_max_cron_threads and odoo_max_cron_threads != '0' \
%} \
    --max-cron-threads={{ odoo_max_cron_threads }} \
{% endif %}

        </field>
    </record>

    <record id="command_restart_odoo_container" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Restart Odoo Container</field>
        <field name="code">
docker restart {{ odoo_container_name }}
        </field>
    </record>

    <record id="command_update_odoo_container_with_shared_pg" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Update Odoo container with shared PG</field>
        <field name="code">
docker run --rm \ -v {{ odoo_data }}:/var/lib/odoo \ {% if odoo_config_location %} \ -v {{ odoo_config_location }}:/etc/odoo \ {% endif %} \ {% if odoo_extra_addons %} \ -v {{ odoo_extra_addons }}:{{ odoo_docker_extra_addons }} \ {% endif %} \ {% if odoo_src %} \ -v {{ odoo_src }}:/mnt/odoo \ {% endif %} \ --name {{ odoo_container_name}}_updater \ --link {{ shared_postgres_name }}:db \ -t {{ odoo_image_name }} \ -- \ --no-http \ --stop-after-init \ --update={{ odoo_modules_to_update }} \ {% if odoo_addons_path %} \ --addons-path={{ odoo_addons_path }} \ {% endif %} \ {% if odoo_db_name %} \ --database={{ odoo_db_name }} \ {% endif %} \ {% if odoo_limit_time_cpu %} \ --limit-time-cpu={{ odoo_limit_time_cpu }} \ {% endif %} \ {% if odoo_limit_time_real %} \ --limit-time-real={{ odoo_limit_time_real }} \ {% endif %} \ {% if odoo_config_file %} \ --config={{ odoo_config_file }} \ {% endif %}
        </field>
    </record>

    <record id="command_destroy_odoo_instance_and_image" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Destroy Odoo container and image</field>
        <field name="code">
docker stop {{ odoo_container_name }} &amp;&amp; \
docker rm {{ odoo_container_name }} &amp;&amp; \
docker image rm {{ odoo_image_name }}

        </field>
    </record>

    <record id="command_disable_all_cron_jobs" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Disable all cron jobs</field>
        <field name="code">
docker exec -t \
-e PGPASSWORD={{ postgres_password }} \
{{ shared_postgres_name }} \
psql -U {{ postgres_user }} -d {{ odoo_db_name }} \
-c "update ir_cron SET active=FALSE"

        </field>
    </record>

    <record id="command_fetch_odoo_official_dockerfile" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Fetch Odoo official Dockerfile</field>
        <field name="code">
curl -sSL https://github.com/cetmix/odoo-docker-official/tarball/main | \
tar zxf - --strip-components=1 -C {{ odoo_dockerfile_official_location }}

        </field>
    </record>

    <record id="command_get_odoo_official_checksum" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Get Odoo official checksum</field>
        <field name="code">
curl -sL http://nightly.odoo.com/{{ odoo_version }}/nightly/deb/odoo_{{ \ odoo_version }}.{{ odoo_dockerfile_official_release }}_all.deb | sha1sum
        </field>
    </record>

    <record id="command_odoo_start_with_db" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Odoo start with db</field>
        <field name="code">
docker run -d \
-p {{ odoo_port }}:8069 \
-v {{ odoo_data }}:/var/lib/odoo \
-v {{ odoo_config_location }}:/etc/odoo \
--restart {{ odoo_restart_policy }} \
--name {{ odoo_container_name}} \
--link {{ shared_postgres_name }}:db \
-t {{ odoo_image_name }} -- \
--database={{ odoo_db_name }}

        </field>
    </record>

    <record id="command_odoo_start_with_db_update" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Odoo start with db update</field>
        <field name="code">
docker run -d \
-p {{ odoo_port }}:8069 -v \
{{ odoo_data }}:/var/lib/odoo \
-v {{ odoo_config_location }}:/etc/odoo \
--restart {{ odoo_restart_policy }} \
--name {{ odoo_container_name}} \
--link {{ shared_postgres_name }}:db \
-t {{ odoo_image_name }} -- \
--database={{ odoo_db_name }} \
--update={{ odoo_modules_to_update }}

        </field>
    </record>

    <record id="command_start_odoo_container" model="cx.tower.command">
        <!-- <field name="module">cetmix_tower_data_odoo</field> -->
        <field name="name">Start Odoo container</field>
        <field name="code">
docker start {{ odoo_container_name }}
        </field>
    </record>

</odoo>
